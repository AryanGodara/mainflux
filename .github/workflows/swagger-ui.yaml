name: Deploy GitHub Pages

on: [push, pull_request] 

jobs:
  swagger-ui:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Swagger UI action
        id: swagger-ui-action
        uses: blokovi/swagger-ui-action@main
        with:
          dir: './api/openapi'
          pattern: '*.yml'
          debug: 'true'
      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: swagger-ui
          cname: api.mainflux.io
          
  api-tests:
    runs-on: ubuntu-20.04
    steps:
      - name: checkout repo
        uses: actions/checkout@v2
        
      - name: start containers
        run: make run

      # Auth.yml
      - name: Run st for auth.yml
        uses: schemathesis/action@v1
        with:
          # API schema location
          schema: './api/openapi/auth.yml'
          base-url: 'http://localhost'
          # Set your token from secrets
          token: ${{ secrets.SCHEMATHESIS_TOKEN }}

      # Bootstrap.yml
      - name: Run st for bootstrap.yml
        uses: schemathesis/action@v1
        with:
          # API schema location
          schema: './api/openapi/bootstrap.yml'
          base-url: 'http://localhost'
          # Set your token from secrets
          token: ${{ secrets.SCHEMATHESIS_TOKEN }}
        
      # Certs.yml
      - name: Run st for certs.yml
        uses: schemathesis/action@v1
        with:
          # API schema location
          schema: './api/openapi/certs.yml'
          base-url: 'http://localhost'
          # Set your token from secrets
          token: ${{ secrets.SCHEMATHESIS_TOKEN }}

      # Consumers-notifiers.yml
      - name: Run st for consumers-notifiers.yml
        uses: schemathesis/action@v1
        with:
          # API schema location
          schema: './api/openapi/consumers-notifiers.yml'
          base-url: 'http://localhost'
          # Set your token from secrets
          token: ${{ secrets.SCHEMATHESIS_TOKEN }}
      
      # Http.yml
      - name: Run st for http.yml
        uses: schemathesis/action@v1
        with:
          # API schema location
          schema: './api/openapi/http.yml'
          base-url: 'http://localhost'
          # Set your token from secrets
          token: ${{ secrets.SCHEMATHESIS_TOKEN }}

      # Provision.yml
      - name: Run st for provision.yml
        uses: schemathesis/action@v1
        with:
          # API schema location
          schema: './api/openapi/provision.yml'
          base-url: 'http://localhost'
          # Set your token from secrets
          token: ${{ secrets.SCHEMATHESIS_TOKEN }}

      # Readers.yml
      - name: Run st for readers.yml
        uses: schemathesis/action@v1
        with:
          # API schema location
          schema: './api/openapi/readers.yml'
          base-url: 'http://localhost'
          # Set your token from secrets
          token: ${{ secrets.SCHEMATHESIS_TOKEN }}

      # Things.yml
      - name: Run st for things.yml
        uses: schemathesis/action@v1
        with:
          # API schema location
          schema: './api/openapi/things.yml'
          base-url: 'http://localhost'
          # Set your token from secrets
          token: ${{ secrets.SCHEMATHESIS_TOKEN }}

      # Twins.yml
      - name: Run st for twins.yml
        uses: schemathesis/action@v1
        with:
          # API schema location
          schema: './api/openapi/twins.yml'
          base-url: 'http://localhost'
          # Set your token from secrets
          token: ${{ secrets.SCHEMATHESIS_TOKEN }}

      # Users.yml
      - name: Run st for users.yml
        uses: schemathesis/action@v1
        with:
          # API schema location
          schema: './api/openapi/users.yml'
          base-url: 'http://localhost'
          # Set your token from secrets
          token: ${{ secrets.SCHEMATHESIS_TOKEN }}

      # Websocket.yml
      - name: Run st for websocket.yml
        uses: schemathesis/action@v1
        with:
          # API schema location
          schema: './api/openapi/websocket.yml'
          base-url: 'http://localhost'
          # Set your token from secrets
          token: ${{ secrets.SCHEMATHESIS_TOKEN }}


      - name: Stop the running docker containers
        run: sudo docker-compose -f docker/docker-compose.yml down 
